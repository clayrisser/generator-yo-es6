export default {
  copy: function copy(yo) {
    var _yo$fs, _yo$fs2, _yo$fs3, _yo$fs4, _yo$fs5, _yo$fs6, _yo$fs7, _yo$fs8, _yo$fs9, _yo$fs10, _yo$fs11, _yo$fs12, _yo$fs13, _yo$fs14, _yo$fs15, _yo$fs16, _yo$fs17, _yo$fs18;

    return Promise.all([(_yo$fs = yo.fs).copyTpl.apply(_yo$fs, [yo.templatePath('template/shared/config/**'), yo.destinationPath('config')].concat(yo.context)), (_yo$fs2 = yo.fs).copyTpl.apply(_yo$fs2, [yo.templatePath('template/shared/test/**'), yo.destinationPath('test')].concat(yo.context)), (_yo$fs3 = yo.fs).copy.apply(_yo$fs3, [yo.templatePath('template/shared/views/docs/**'), yo.destinationPath('views/docs')].concat(yo.context)), (_yo$fs4 = yo.fs).copy.apply(_yo$fs4, [yo.templatePath('template/shared/_dockerignore'), yo.destinationPath('.dockerignore')].concat(yo.context)), (_yo$fs5 = yo.fs).copy.apply(_yo$fs5, [yo.templatePath('template/shared/_editorconfig'), yo.destinationPath('.editorconfig')].concat(yo.context)), (_yo$fs6 = yo.fs).copy.apply(_yo$fs6, [yo.templatePath('template/shared/_eslintignore'), yo.destinationPath('.eslintignore')].concat(yo.context)), (_yo$fs7 = yo.fs).copy.apply(_yo$fs7, [yo.templatePath('template/shared/_eslintrc'), yo.destinationPath('.eslintrc')].concat(yo.context)), (_yo$fs8 = yo.fs).copy.apply(_yo$fs8, [yo.templatePath('template/shared/_gitignore'), yo.destinationPath('.gitignore')].concat(yo.context)), (_yo$fs9 = yo.fs).copyTpl.apply(_yo$fs9, [yo.templatePath('template/shared/Dockerfile'), yo.destinationPath('Dockerfile')].concat(yo.context)), (_yo$fs10 = yo.fs).copy.apply(_yo$fs10, [yo.templatePath('template/shared/LICENSE'), yo.destinationPath('LICENSE')].concat(yo.context)), (_yo$fs11 = yo.fs).copyTpl.apply(_yo$fs11, [yo.templatePath('template/shared/README.md'), yo.destinationPath('README.md')].concat(yo.context)), (_yo$fs12 = yo.fs).copyTpl.apply(_yo$fs12, [yo.templatePath('template/shared/docker-compose.yml'), yo.destinationPath('docker-compose.yml')].concat(yo.context)), (_yo$fs13 = yo.fs).copy.apply(_yo$fs13, [yo.templatePath('template/shared/index.js'), yo.destinationPath('index.js')].concat(yo.context)), (_yo$fs14 = yo.fs).copyTpl.apply(_yo$fs14, [yo.templatePath('template/shared/package.json'), yo.destinationPath('package.json')].concat(yo.context)), (_yo$fs15 = yo.fs).copy.apply(_yo$fs15, [yo.templatePath('template/shared/server.js'), yo.destinationPath('server.js')].concat(yo.context)), (_yo$fs16 = yo.fs).copyTpl.apply(_yo$fs16, [yo.templatePath('template/' + yo.answers.template + '/api/**'), yo.destinationPath('api')].concat(yo.context)), (_yo$fs17 = yo.fs).copyTpl.apply(_yo$fs17, [yo.templatePath('template/' + yo.answers.template + '/config/routes.js'), yo.destinationPath('config/routes.js')].concat(yo.context)), (_yo$fs18 = yo.fs).copyTpl.apply(_yo$fs18, [yo.templatePath('database/' + yo.answers.database + '/config/database.js'), yo.destinationPath('config/database.js')].concat(yo.context))]);
  }
};